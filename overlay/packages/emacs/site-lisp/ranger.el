(require 'vterm)
(require 'evil)

(defun ranger--sentinel (process event)
  (let ((buffer (process-buffer process)))
    (when (and buffer (local-variable-p 'ranger--filename buffer))
      (let ((path (buffer-local-value 'ranger--path buffer))
            (tmp-filename (buffer-local-value 'ranger--filename buffer)))
        (kill-buffer buffer)
        (dolist (filename (utils--read-lines tmp-filename))
          (message filename)
          (find-file filename))
        (delete-file tmp-filename)))))

(defun ranger-select-files ()
  (interactive)
  (let ((default-directory (utils--get-project))
        (tmp-filename (make-temp-file "ranger-"))
        (tmp-buffer (make-temp-name "ranger-"))
        (previous-vterm-shell vterm-shell))
    (switch-to-buffer tmp-buffer)
    (setq vterm-shell (format "ranger --choosefiles=%s" tmp-filename))
    (vterm-mode)
    (set-process-sentinel (get-buffer-process tmp-buffer) 'ranger--sentinel)
    (setq-local ranger--filename tmp-filename)
    (setq-local ranger--path default-directory)
    (setq vterm-shell previous-vterm-shell)))

(provide 'ranger)
